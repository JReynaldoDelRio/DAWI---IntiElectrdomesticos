function openDialog() {
	document.getElementById('register-dialog').showModal();
}

function closeDialog() {
	document.getElementById('register-dialog').close();
}

function registerProduct() {
	var isValid = true; // Variable para verificar la validez del formulario

	// Validar los campos antes de enviar el formulario
	var name = document.getElementById('name');
	var brand = document.getElementById('brand');
	var stock = document.getElementById('stock');
	var price = document.getElementById('price');

	var nameError = document.getElementById('nameError');
	var brandError = document.getElementById('brandError');
	var stockError = document.getElementById('stockError');
	var priceError = document.getElementById('priceError');

	// Verificar si el campo de Nombre está seleccionado correctamente
	if (name.value == -1) {
		nameError.textContent = 'Seleccione una opción válida';
		isValid = false;
		event.preventDefault();
	} else {
		nameError.textContent = '';
	}

	// Verificar si el campo de Marca está seleccionado correctamente
	if (brand.value == -1) {
		brandError.textContent = 'Seleccione una opción válida';
		isValid = false;
		event.preventDefault();
	} else {
		brandError.textContent = '';
	}

	// Validar que el stock sea mayor a 0
	var stockInput = document.getElementById('stock');
	var stockValue = parseFloat(stockInput.value);
	if (stockValue <= 0) {
		isValid = false;
		stockInput.classList.add('error');
		// Mostrar mensaje de error específico para el stock
		var stockError = document.getElementById('stockError');
		stockError.textContent = 'El stock debe ser mayor a 0';
		
	} else {
		stockInput.classList.remove('error');
		var stockError = document.getElementById('stockError');
		stockError.style.display = 'none';
	}

	// Validar que el precio sea mayor a 0.0
	var priceInput = document.getElementById('price');
	var priceValue = parseFloat(priceInput.value);
	if (priceValue <= 0) {
		isValid = false;
		priceInput.classList.add('error');
		// Mostrar mensaje de error específico para el precio
		var priceError = document.getElementById('priceError');
		priceError.textContent = 'Ingrese un precio valido';
		priceError.style.display = 'block';
	} else {
		priceInput.classList.remove('error');
		var priceError = document.getElementById('priceError');
		priceError.style.display = 'none';
	}
	
	if (isValid) {
		Swal.fire('¡Registro correcto!', '', 'success');
	}
	return isValid;
	
}

function confirmAction() {
	swal({
		title: "¿Estás seguro?",
		text: "Esta acción no se puede deshacer",
		icon: "warning",
		buttons: {
			cancel: "Cancelar",
			confirm: "Eliminar"
		},
		dangerMode: true
	}).then((willDelete) => {
		if (willDelete) {
			// Lógica para eliminar el elemento
			// Llama a la función o método correspondiente
			eliminarElemento();
		} else {
			// Lógica cuando el usuario cancela la eliminación
			// Puedes mostrar un mensaje o realizar otra acción
			swal("Eliminación cancelada", "", "info");
		}
	});
}
function eliminarElemento() {
  // Realizar una solicitud AJAX al backend para eliminar el elemento
  // Puedes utilizar librerías como Axios, jQuery AJAX o el método fetch
  // Ajusta la URL y los parámetros de acuerdo a tu backend

  // Ejemplo utilizando Axios
  axios.delete(`/api/elementos/${id}`)
    .then(response => {
      // La eliminación fue exitosa
      // Puedes mostrar un mensaje de éxito o actualizar la lista de elementos
      swal("Elemento eliminado", "", "success");
      
      // Aquí puedes realizar alguna acción adicional, como actualizar la lista de elementos en la página
      // ...
    })
    .catch(error => {
      // Ocurrió un error al eliminar el elemento
      // Puedes mostrar un mensaje de error o realizar alguna acción adicional
      swal("Error al eliminar el elemento", "", "error");
      
      // Aquí puedes manejar el error de acuerdo a tus necesidades
      // ...
    });
}